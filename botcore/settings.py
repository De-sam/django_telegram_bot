"""
Django settings for botcore project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--)2j$+n4qji89)u6b%76+dcvy()czo%%#e&!s_0z9!8b_359*b'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'customers',
    'bot',
    'agents',
    'tickets',
    'admin_app',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': 'bot.log',
        },
    },
    'loggers': {
        'tickets': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

ROOT_URLCONF = 'botcore.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'botcore.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


#============================================
#BOT CONFIG
#============================================
# Telegram
TELEGRAM_BOT_TOKEN = '8358243654:AAGVh802-P823WU3CKd-ZiCcubHzt4f40Nc'  # More: https://core.telegram.org/bots#3-how-do-i-create-a-bot'

# Support Chat (Chat ID)
SUPPORT_CHAT = -1002759088455

ADMIN_IDS = [744260641]   # your Telegram ID(s)

# Misc
#time_zone           = 'GMT+2'   # Supports time zone
BAD_WORDS_TOGGLE = True      # Enable / disable bad words filter
spam_toggle         = True      # Enable / disable spam filter
spam_protection     = 3         # How many consecutive messages can be sent without a reply from the team
open_ticket_emoji   = 24        # After X amount of HOURS an emoji will pop up at /tickets

# Messages
TEXT_MESSAGES = {
    'start': 'Hi {}, how can we help you today?',
    'faqs': 'Your FAQ text goes in here.',
    'support_response': 'From: {}'                  # Support response is being added automatically. {} = refers to the staffs first name.
}

# Regex (https://regex101.com/)
REGEX_FILTER = {
    'bad_words': r'(?i)^(.*?(\b\w*fuck|shut up|dick|bitch|bastart|cunt|bollocks|bugger|rubbish|wanker|twat|suck|ass|pussy|arsch\w*\b)[^$]*)$'
}


#============================================
# FILE UPLOAD CONFIG
#============================================

# Extensions the bot will accept (must be lowercase and start with a dot)
ALLOWED_EXTENSIONS = {'.pdf', '.docx', '.jpg', '.jpeg', '.png'}

# MIME types the bot will accept
# MIME = official "type/subtype" for file formats (Telegram sometimes sends generic mimes, so we still check extension)
ALLOWED_MIME_PREFIXES = {
    'application/pdf',  # PDF files
    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',  # DOCX
    'image/jpeg',       # JPG/JPEG
    'image/png',        # PNG
}

# A simple human-readable string of accepted types, for sending in messages
ACCEPTED_TYPES_READABLE = "PDF, JPG, PNG, DOCX"
